#!/bin/sh
myArrayPath="$HOME/bin $HOME/bin/gui $HOME/bin/games $HOME/.cargo/bin/ /opt/simone/bin $GOPATH/bin /opt/anaconda/bin"
# Compilation flags
ARCHFLAGS="-arch $(uname -m)"
export ARCHFLAGS

# should be set by default
# [ -x /usr/bin/lesspipe.sh ] && eval "$(SHELL=/bin/sh lesspipe.sh)" #ARCH

# Set the default editor
export EDITOR="vim"
# ... and my personal editor2
#export EDITOR2="emacsclient -cn"
export EDITOR2="emacsclient -t"

# To start emacs in daemon mode automatically
export ALTERNATE_EDITOR=""
#export EDITOR=emacsclient

# Default browser
export BROWSER="firefox"

# To override vimrc default location
# Set vimrc's location and source it on vim startup
# export VIMINIT='let $MYVIMRC = $XDG_CONFIG_HOME . "/vim/vimrc" | source $MYVIMRC'
export VIMINIT="let \$MYVIMRC = \$XDG_CONFIG_HOME . '/vim/vimrc' | source \$MYVIMRC"


# Go src, bin, pkg directories.
# WARN: I put the dir inside .local, where also user python stores its bin, lib, share dirs.
export GOPATH="$HOME/.local"


# GPG variables
GPG_TTY=$(tty)
export GPG_TTY


# Set matlab to use the userpath folder (first run userpath('dir_name') inside matlab
export MATLAB_USE_USERWORK=1
# Set matlab log directory
export MATLAB_LOG_DIR="$MDIR_LOGS/matlab"

# Jupyter
export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter"

# For helm-gtags
export GTAGSLABEL=pygments 
export GTAGSCONF=/usr/share/gtags/gtags.conf

# Format options
export GIT_LOG_OPTS="--graph --abbrev-commit --decorate --all"

# npm config dir
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm"
export NPM_CONFIG_CACHE="$XDG_CACHE_HOME/npm"

# https://github.com/chubin/cheat.sh
# export CHEATSH="curl cht.sh"
#https://github.com/omgimanerd/getnews.tech

# for dialog
export DIALOGRC="$HOME/dialog/dialogrc"

# for sway
#export TERMINAL=termite
export TERMINAL='kitty'
# for ranger
export TERMCMD='kitty'

# for locale
# export LC_ALL=en_US.UTF-8
export LC_TIME=it_IT.UTF-8 

# pyenv
if command -v pyenv 1>/dev/null 2>&1; then
  # echo "exporting PYENV"
  #export PYENV_ROOT="$HOME/.pyenv"
  export PYENV_ROOT="$MDIR_LINUX_DATA/pyenv"
  myArrayPath="$myArrayPath $PYENV_ROOT/bin"
fi

if command -v rbenv 1>/dev/null 2>&1; then
  export RBENV_ROOT="$MDIR_LINUX_DATA/rbenv"
fi



# opam configuration
if [ -r "$HOME/.opam/opam-init/init.sh" ]; then
    . "$HOME/.opam/opam-init/init.sh" >/dev/null 2>&1
fi

# conda
if [ -r "/opt/miniconda3/etc/profile.d/conda.sh" ]; then
    . "/opt/miniconda3/etc/profile.d/conda.sh" >/dev/null 2>&1
fi

# RUBY
# export GEM_HOME="$(ruby -e 'puts Gem.user_dir')"

## RVM
# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
# Some other file is exporting, don't know which one
# export PATH="$PATH:$HOME/.rvm/bin"
# # Load RVM into a shell session *as a function*
# [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" 

## rbenv, alternative to RVM
# However, considering that I'll not use ruby so often, ...
export PATH="$HOME/.rbenv/bin:$PATH"
# eval "$(rbenv init -)"
#

# chtsh
export CHTSH_CONF="$XDG_CONFIG_HOME/chtsh/conf"

# Export additional bins path
# for str in ${myArray[@]}; do
for str in $myArrayPath; do
    case ":$PATH:" in
        *:"$str":*) ;;  # Do nothing, already in PATH
        *) [ -d "$str" ] && export PATH="$str:$PATH" ;;  # Prepend if directory exists
    esac
done
unset myArray
