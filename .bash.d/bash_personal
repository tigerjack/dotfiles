# Shopt various
# append to the history file, don't overwrite it
shopt -s histappend
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize
# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar
# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Eternal bash history.
# ---------------------
# Undocumented feature which sets the size to "unlimited".
# http://stackoverflow.com/questions/9457233/unlimited-bash-history
export HISTFILESIZE=
export HISTSIZE=
export HISTTIMEFORMAT="[%F %T] "
# Change the file location because certain bash sessions truncate .bash_history file upon close.
# http://superuser.com/questions/575479/bash-history-truncated-to-500-lines-on-each-login
export HISTFILE=~/.bash_eternal_history
# To erase duplicates from history
#export HISTCONTROL=erasedups
# Ignore commands starting with space
HISTCONTROL=ignorespace
# Force prompt to write history after every command.
# http://superuser.com/questions/20900/bash-history-loss
# 
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND ;} history -a"

## To use solarized dircolors for ls
eval `dircolors ~/.config/dircolors.ansi-dark`

# Autojump must be sourced here if you want to use it in subshells also (f.e. 
# when launching a subshell from ranger)
. /etc/profile.d/autojump.bash #Arch

# Bash coloring
GREEN="\[$(tput setaf 2)\]"
BLUE="\[$(tput setaf 6)\]"
RESET="\[$(tput sgr0)\]"

export PS1="${GREEN}\u@\h:\W${BLUE}"'$(__git_ps1 "(%s)")'"${GREEN}>${RESET}"

if command -v pyenv 1>/dev/null 2>&1; then
  # basic pyenv command
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
  # for pyenv virtualenv, https://github.com/pyenv/pyenv-virtualenv
  eval "$(pyenv virtualenv-init -)"
fi
